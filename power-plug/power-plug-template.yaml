
substitutions:
  name: "lsc-power-plug"
  friendly_name: "LSC Power Plug"

esphome:
  name: ${name}
  friendly_name: ${friendly_name}

  project:
    name: "wjtje.lsc-power-plug"
    version: "1.0.1"

# This external component is needed because of a bug in the upstream ESPHome repo
# For more information goto: https://s.wjtje.dev/lscpowerpatch
external_components:
  - source:
      type: git
      url: https://github.com/wjtje/esphome
      ref: lsc-power-monitoring-fix
    components: [ pulse_counter ]

api:
  # ESPHome devices reboot after 15 minutes not connected to Home-Assistant
  # Normally this is a pretty nice feature, especially for devices where you
  # don't have physical access to them.
  # But personally I didn't like this on power plugs so it's disabled by default/
  reboot_timeout: 0s
  # If you wan't encryption between this node and Home-Assistant, command out the
  # following and generate a new key using: https://esphome.io/components/api
  # encryption: 
  #   key: 

ota:
  - platform: esphome
  # Adding a OTA password can be a great way to improve the security of the device
  # See: https://esphome.io/components/ota/esphome
  # password: 

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # To give your node a static IP, use the following
  # manual_ip:
  #   static_ip: 192.168.0.123
  #   gateway: 192.168.0.1
  #   subnet: 255.255.255.0

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: ${friendly_name}
    # This uses the same wifi password as you normal wifi
    password: !secret wifi_password

captive_portal:

bk72xx:
  board: cb2s

# Enable logging (on LOG UART)
# This UART is not easly accessable, but it's there if you want to use it
logger:
  hardware_uart: UART2

# The relay on the device (e.g. the whole point of this device)
switch:
  - id: rl1
    name: "Output"
    platform: gpio
    pin: 8
    device_class: outlet
    # Bind the led1 to the relay status
    on_turn_on:
      - if:
          condition:
            switch.is_on: c1
          then:
            - light.turn_on: led1
    on_turn_off:
      - light.turn_off: led1
  # Config for the status led
  - id: c1
    name: "Status Light"
    platform: template
    entity_category: config
    icon: mdi:led-on
    optimistic: true
    restore_mode: RESTORE_DEFAULT_ON
    turn_on_action:
      - if:
          condition:
            switch.is_on: rl1
          then:
            - light.turn_on: led1
    turn_off_action:
      - light.turn_off: led1
  # Config for the button
  - id: c2
    name: "Button Control"
    platform: template
    entity_category: config
    icon: mdi:gesture-tap
    optimistic: true
    restore_mode: RESTORE_DEFAULT_ON

# The button on the devices toggles the Relay
binary_sensor:
  - platform: gpio
    pin:
      number: 7
      inverted: true
      mode:
        input: true
        pullup: true
    id: bt1
    filters:
      - delayed_on_off: 10ms # Debounce button
    on_press:
      if:
        condition:
          switch.is_on: c2
        then:
          - switch.toggle: rl1

# The Blue LED is used for status
status_led:
  pin: 10

# The Red LED indicates Relay status
light:
  - platform: binary
    output: led1_pin
    id: led1

output:
  - id: led1_pin
    platform: gpio
    pin: 6

# Energy monitoring
sensor:
  - platform: hlw8012
    model: BL0937
    current_resistor: 0.0011
    voltage_divider: 1661.8
    change_mode_every: 2
    sel_pin:
      number: 11
      inverted: true
    cf_pin: 26
    cf1_pin: 24
    current:
      name: "Current"
    voltage:
      name: "Voltage"
    power:
      name: "Power"
    energy:
      name: "Energy"
    update_interval: 5s
